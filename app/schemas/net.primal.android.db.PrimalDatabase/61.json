{
  "formatVersion": 1,
  "database": {
    "version": 61,
    "identityHash": "e9eeea55edad4a292f327becb09c8c7b",
    "entities": [
      {
        "tableName": "PostData",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`postId` TEXT NOT NULL, `authorId` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `tags` TEXT NOT NULL, `content` TEXT NOT NULL, `uris` TEXT NOT NULL, `hashtags` TEXT NOT NULL, `sig` TEXT NOT NULL, `raw` TEXT NOT NULL, `authorMetadataId` TEXT, `replyToPostId` TEXT, `replyToAuthorId` TEXT, PRIMARY KEY(`postId`))",
        "fields": [
          {
            "fieldPath": "postId",
            "columnName": "postId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "authorId",
            "columnName": "authorId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tags",
            "columnName": "tags",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "uris",
            "columnName": "uris",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "hashtags",
            "columnName": "hashtags",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sig",
            "columnName": "sig",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "raw",
            "columnName": "raw",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "authorMetadataId",
            "columnName": "authorMetadataId",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "replyToPostId",
            "columnName": "replyToPostId",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "replyToAuthorId",
            "columnName": "replyToAuthorId",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "postId"
          ]
        }
      },
      {
        "tableName": "ProfileData",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ownerId` TEXT NOT NULL, `eventId` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `raw` TEXT NOT NULL, `handle` TEXT, `displayName` TEXT, `internetIdentifier` TEXT, `lightningAddress` TEXT, `lnUrlDecoded` TEXT, `avatarCdnImage` TEXT, `bannerCdnImage` TEXT, `website` TEXT, `about` TEXT, `aboutUris` TEXT NOT NULL, `aboutHashtags` TEXT NOT NULL, `primalName` TEXT, `primalPremiumInfo` TEXT, `blossoms` TEXT NOT NULL, PRIMARY KEY(`ownerId`))",
        "fields": [
          {
            "fieldPath": "ownerId",
            "columnName": "ownerId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "raw",
            "columnName": "raw",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "handle",
            "columnName": "handle",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "internetIdentifier",
            "columnName": "internetIdentifier",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "lightningAddress",
            "columnName": "lightningAddress",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "lnUrlDecoded",
            "columnName": "lnUrlDecoded",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "avatarCdnImage",
            "columnName": "avatarCdnImage",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "bannerCdnImage",
            "columnName": "bannerCdnImage",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "website",
            "columnName": "website",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "about",
            "columnName": "about",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "aboutUris",
            "columnName": "aboutUris",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "aboutHashtags",
            "columnName": "aboutHashtags",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "primalName",
            "columnName": "primalName",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "primalPremiumInfo",
            "columnName": "primalPremiumInfo",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "blossoms",
            "columnName": "blossoms",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "ownerId"
          ]
        }
      },
      {
        "tableName": "RepostData",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`repostId` TEXT NOT NULL, `authorId` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `tags` TEXT NOT NULL, `postId` TEXT NOT NULL, `postAuthorId` TEXT NOT NULL, `sig` TEXT NOT NULL, PRIMARY KEY(`repostId`))",
        "fields": [
          {
            "fieldPath": "repostId",
            "columnName": "repostId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "authorId",
            "columnName": "authorId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tags",
            "columnName": "tags",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "postId",
            "columnName": "postId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "postAuthorId",
            "columnName": "postAuthorId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sig",
            "columnName": "sig",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "repostId"
          ]
        },
        "indices": [
          {
            "name": "index_RepostData_postId",
            "unique": false,
            "columnNames": [
              "postId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_RepostData_postId` ON `${TABLE_NAME}` (`postId`)"
          }
        ]
      },
      {
        "tableName": "EventStats",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`eventId` TEXT NOT NULL, `likes` INTEGER NOT NULL, `replies` INTEGER NOT NULL, `mentions` INTEGER NOT NULL, `reposts` INTEGER NOT NULL, `zaps` INTEGER NOT NULL, `satsZapped` INTEGER NOT NULL, `score` INTEGER NOT NULL, `score24h` INTEGER NOT NULL, PRIMARY KEY(`eventId`))",
        "fields": [
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "likes",
            "columnName": "likes",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "replies",
            "columnName": "replies",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mentions",
            "columnName": "mentions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reposts",
            "columnName": "reposts",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "zaps",
            "columnName": "zaps",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "satsZapped",
            "columnName": "satsZapped",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "score",
            "columnName": "score",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "score24h",
            "columnName": "score24h",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "eventId"
          ]
        }
      },
      {
        "tableName": "EventZap",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`eventId` TEXT NOT NULL, `zapSenderId` TEXT NOT NULL, `zapReceiverId` TEXT NOT NULL, `zapRequestAt` INTEGER NOT NULL, `zapReceiptAt` INTEGER NOT NULL, `amountInBtc` REAL NOT NULL, `message` TEXT, `zapSenderDisplayName` TEXT, `zapSenderHandle` TEXT, `zapSenderInternetIdentifier` TEXT, `zapSenderAvatarCdnImage` TEXT, `zapSenderPrimalLegendProfile` TEXT, PRIMARY KEY(`zapSenderId`, `eventId`, `zapRequestAt`))",
        "fields": [
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "zapSenderId",
            "columnName": "zapSenderId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "zapReceiverId",
            "columnName": "zapReceiverId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "zapRequestAt",
            "columnName": "zapRequestAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "zapReceiptAt",
            "columnName": "zapReceiptAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "amountInBtc",
            "columnName": "amountInBtc",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "message",
            "columnName": "message",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "zapSenderDisplayName",
            "columnName": "zapSenderDisplayName",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "zapSenderHandle",
            "columnName": "zapSenderHandle",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "zapSenderInternetIdentifier",
            "columnName": "zapSenderInternetIdentifier",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "zapSenderAvatarCdnImage",
            "columnName": "zapSenderAvatarCdnImage",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "zapSenderPrimalLegendProfile",
            "columnName": "zapSenderPrimalLegendProfile",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "zapSenderId",
            "eventId",
            "zapRequestAt"
          ]
        }
      },
      {
        "tableName": "EventUserStats",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`eventId` TEXT NOT NULL, `userId` TEXT NOT NULL, `replied` INTEGER NOT NULL, `liked` INTEGER NOT NULL, `reposted` INTEGER NOT NULL, `zapped` INTEGER NOT NULL, PRIMARY KEY(`eventId`, `userId`))",
        "fields": [
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "replied",
            "columnName": "replied",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "liked",
            "columnName": "liked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reposted",
            "columnName": "reposted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "zapped",
            "columnName": "zapped",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "eventId",
            "userId"
          ]
        },
        "indices": [
          {
            "name": "index_EventUserStats_eventId",
            "unique": false,
            "columnNames": [
              "eventId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_EventUserStats_eventId` ON `${TABLE_NAME}` (`eventId`)"
          },
          {
            "name": "index_EventUserStats_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_EventUserStats_userId` ON `${TABLE_NAME}` (`userId`)"
          }
        ]
      },
      {
        "tableName": "EventUriNostr",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`position` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `eventId` TEXT NOT NULL, `uri` TEXT NOT NULL, `type` TEXT NOT NULL, `referencedEventAlt` TEXT, `referencedHighlight` TEXT, `referencedNote` TEXT, `referencedArticle` TEXT, `referencedUser` TEXT, `referencedZap` TEXT)",
        "fields": [
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "uri",
            "columnName": "uri",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "referencedEventAlt",
            "columnName": "referencedEventAlt",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "referencedHighlight",
            "columnName": "referencedHighlight",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "referencedNote",
            "columnName": "referencedNote",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "referencedArticle",
            "columnName": "referencedArticle",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "referencedUser",
            "columnName": "referencedUser",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "referencedZap",
            "columnName": "referencedZap",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "position"
          ]
        },
        "indices": [
          {
            "name": "index_EventUriNostr_eventId_uri",
            "unique": true,
            "columnNames": [
              "eventId",
              "uri"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_EventUriNostr_eventId_uri` ON `${TABLE_NAME}` (`eventId`, `uri`)"
          }
        ]
      },
      {
        "tableName": "EventUri",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`position` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `eventId` TEXT NOT NULL, `url` TEXT NOT NULL, `type` TEXT NOT NULL, `mimeType` TEXT, `variants` TEXT, `title` TEXT, `description` TEXT, `thumbnail` TEXT, `authorAvatarUrl` TEXT)",
        "fields": [
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mimeType",
            "columnName": "mimeType",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "variants",
            "columnName": "variants",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "thumbnail",
            "columnName": "thumbnail",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "authorAvatarUrl",
            "columnName": "authorAvatarUrl",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "position"
          ]
        },
        "indices": [
          {
            "name": "index_EventUri_eventId_url",
            "unique": true,
            "columnNames": [
              "eventId",
              "url"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_EventUri_eventId_url` ON `${TABLE_NAME}` (`eventId`, `url`)"
          }
        ]
      },
      {
        "tableName": "EventRelayHints",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`eventId` TEXT NOT NULL, `relays` TEXT NOT NULL, PRIMARY KEY(`eventId`))",
        "fields": [
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "relays",
            "columnName": "relays",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "eventId"
          ]
        }
      },
      {
        "tableName": "Feed",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`position` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `ownerId` TEXT NOT NULL, `spec` TEXT NOT NULL, `specKind` TEXT NOT NULL, `feedKind` TEXT NOT NULL, `title` TEXT NOT NULL, `description` TEXT NOT NULL, `enabled` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ownerId",
            "columnName": "ownerId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "spec",
            "columnName": "spec",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "specKind",
            "columnName": "specKind",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "feedKind",
            "columnName": "feedKind",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "enabled",
            "columnName": "enabled",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "position"
          ]
        },
        "indices": [
          {
            "name": "index_Feed_ownerId_spec",
            "unique": true,
            "columnNames": [
              "ownerId",
              "spec"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_Feed_ownerId_spec` ON `${TABLE_NAME}` (`ownerId`, `spec`)"
          }
        ]
      },
      {
        "tableName": "FeedPostDataCrossRef",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ownerId` TEXT NOT NULL, `feedSpec` TEXT NOT NULL, `eventId` TEXT NOT NULL, `orderIndex` INTEGER NOT NULL, PRIMARY KEY(`ownerId`, `feedSpec`, `eventId`))",
        "fields": [
          {
            "fieldPath": "ownerId",
            "columnName": "ownerId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "feedSpec",
            "columnName": "feedSpec",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "orderIndex",
            "columnName": "orderIndex",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "ownerId",
            "feedSpec",
            "eventId"
          ]
        },
        "indices": [
          {
            "name": "index_FeedPostDataCrossRef_ownerId",
            "unique": false,
            "columnNames": [
              "ownerId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_FeedPostDataCrossRef_ownerId` ON `${TABLE_NAME}` (`ownerId`)"
          },
          {
            "name": "index_FeedPostDataCrossRef_feedSpec",
            "unique": false,
            "columnNames": [
              "feedSpec"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_FeedPostDataCrossRef_feedSpec` ON `${TABLE_NAME}` (`feedSpec`)"
          },
          {
            "name": "index_FeedPostDataCrossRef_eventId",
            "unique": false,
            "columnNames": [
              "eventId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_FeedPostDataCrossRef_eventId` ON `${TABLE_NAME}` (`eventId`)"
          }
        ]
      },
      {
        "tableName": "FeedPostRemoteKey",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ownerId` TEXT NOT NULL, `eventId` TEXT NOT NULL, `directive` TEXT NOT NULL, `sinceId` INTEGER NOT NULL, `untilId` INTEGER NOT NULL, `cachedAt` INTEGER NOT NULL, PRIMARY KEY(`ownerId`, `eventId`, `directive`))",
        "fields": [
          {
            "fieldPath": "ownerId",
            "columnName": "ownerId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "directive",
            "columnName": "directive",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sinceId",
            "columnName": "sinceId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "untilId",
            "columnName": "untilId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cachedAt",
            "columnName": "cachedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "ownerId",
            "eventId",
            "directive"
          ]
        }
      },
      {
        "tableName": "NoteConversationCrossRef",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`noteId` TEXT NOT NULL, `replyNoteId` TEXT NOT NULL, PRIMARY KEY(`noteId`, `replyNoteId`))",
        "fields": [
          {
            "fieldPath": "noteId",
            "columnName": "noteId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "replyNoteId",
            "columnName": "replyNoteId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "noteId",
            "replyNoteId"
          ]
        },
        "indices": [
          {
            "name": "index_NoteConversationCrossRef_noteId",
            "unique": false,
            "columnNames": [
              "noteId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_NoteConversationCrossRef_noteId` ON `${TABLE_NAME}` (`noteId`)"
          },
          {
            "name": "index_NoteConversationCrossRef_replyNoteId",
            "unique": false,
            "columnNames": [
              "replyNoteId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_NoteConversationCrossRef_replyNoteId` ON `${TABLE_NAME}` (`replyNoteId`)"
          }
        ]
      },
      {
        "tableName": "ProfileStats",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`profileId` TEXT NOT NULL, `following` INTEGER, `followers` INTEGER, `notesCount` INTEGER, `readsCount` INTEGER, `mediaCount` INTEGER, `repliesCount` INTEGER, `relaysCount` INTEGER, `totalReceivedZaps` INTEGER, `contentZapCount` INTEGER, `totalReceivedSats` INTEGER, `joinedAt` INTEGER, PRIMARY KEY(`profileId`))",
        "fields": [
          {
            "fieldPath": "profileId",
            "columnName": "profileId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "following",
            "columnName": "following",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "followers",
            "columnName": "followers",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "notesCount",
            "columnName": "notesCount",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "readsCount",
            "columnName": "readsCount",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "mediaCount",
            "columnName": "mediaCount",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "repliesCount",
            "columnName": "repliesCount",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "relaysCount",
            "columnName": "relaysCount",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "totalReceivedZaps",
            "columnName": "totalReceivedZaps",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "contentZapCount",
            "columnName": "contentZapCount",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "totalReceivedSats",
            "columnName": "totalReceivedSats",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "joinedAt",
            "columnName": "joinedAt",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "profileId"
          ]
        }
      },
      {
        "tableName": "TrendingTopic",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`topic` TEXT NOT NULL, `score` REAL NOT NULL, PRIMARY KEY(`topic`))",
        "fields": [
          {
            "fieldPath": "topic",
            "columnName": "topic",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "score",
            "columnName": "score",
            "affinity": "REAL",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "topic"
          ]
        }
      },
      {
        "tableName": "NotificationData",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`notificationId` TEXT NOT NULL, `ownerId` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `type` TEXT NOT NULL, `seenGloballyAt` INTEGER, `actionUserId` TEXT, `actionPostId` TEXT, `satsZapped` INTEGER, PRIMARY KEY(`notificationId`))",
        "fields": [
          {
            "fieldPath": "notificationId",
            "columnName": "notificationId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "ownerId",
            "columnName": "ownerId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "seenGloballyAt",
            "columnName": "seenGloballyAt",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "actionUserId",
            "columnName": "actionUserId",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "actionPostId",
            "columnName": "actionPostId",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "satsZapped",
            "columnName": "satsZapped",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "notificationId"
          ]
        }
      },
      {
        "tableName": "MutedUserData",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `ownerId` TEXT NOT NULL, `userMetadataEventId` TEXT, PRIMARY KEY(`userId`, `ownerId`))",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "ownerId",
            "columnName": "ownerId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userMetadataEventId",
            "columnName": "userMetadataEventId",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId",
            "ownerId"
          ]
        }
      },
      {
        "tableName": "DirectMessageData",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`messageId` TEXT NOT NULL, `ownerId` TEXT NOT NULL, `senderId` TEXT NOT NULL, `receiverId` TEXT NOT NULL, `participantId` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `content` TEXT NOT NULL, `uris` TEXT NOT NULL, `hashtags` TEXT NOT NULL, PRIMARY KEY(`messageId`, `ownerId`))",
        "fields": [
          {
            "fieldPath": "messageId",
            "columnName": "messageId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "ownerId",
            "columnName": "ownerId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "senderId",
            "columnName": "senderId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "receiverId",
            "columnName": "receiverId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "participantId",
            "columnName": "participantId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "uris",
            "columnName": "uris",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "hashtags",
            "columnName": "hashtags",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "messageId",
            "ownerId"
          ]
        }
      },
      {
        "tableName": "MessageConversationData",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ownerId` TEXT NOT NULL, `participantId` TEXT NOT NULL, `lastMessageId` TEXT NOT NULL, `lastMessageAt` INTEGER NOT NULL, `unreadMessagesCount` INTEGER NOT NULL, `relation` TEXT NOT NULL, `participantMetadataId` TEXT, PRIMARY KEY(`participantId`, `ownerId`))",
        "fields": [
          {
            "fieldPath": "ownerId",
            "columnName": "ownerId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "participantId",
            "columnName": "participantId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastMessageId",
            "columnName": "lastMessageId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastMessageAt",
            "columnName": "lastMessageAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "unreadMessagesCount",
            "columnName": "unreadMessagesCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "relation",
            "columnName": "relation",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "participantMetadataId",
            "columnName": "participantMetadataId",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "participantId",
            "ownerId"
          ]
        }
      },
      {
        "tableName": "PublicBookmark",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`tagValue` TEXT NOT NULL, `tagType` TEXT NOT NULL, `bookmarkType` TEXT NOT NULL, `ownerId` TEXT NOT NULL, PRIMARY KEY(`tagValue`))",
        "fields": [
          {
            "fieldPath": "tagValue",
            "columnName": "tagValue",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tagType",
            "columnName": "tagType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "bookmarkType",
            "columnName": "bookmarkType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "ownerId",
            "columnName": "ownerId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "tagValue"
          ]
        }
      },
      {
        "tableName": "ArticleData",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`aTag` TEXT NOT NULL, `eventId` TEXT NOT NULL, `articleId` TEXT NOT NULL, `authorId` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `content` TEXT NOT NULL, `title` TEXT NOT NULL, `publishedAt` INTEGER NOT NULL, `raw` TEXT NOT NULL, `imageCdnImage` TEXT, `summary` TEXT, `authorMetadataId` TEXT, `wordsCount` INTEGER, `uris` TEXT NOT NULL, `hashtags` TEXT NOT NULL, PRIMARY KEY(`aTag`))",
        "fields": [
          {
            "fieldPath": "aTag",
            "columnName": "aTag",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "articleId",
            "columnName": "articleId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "authorId",
            "columnName": "authorId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "publishedAt",
            "columnName": "publishedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "raw",
            "columnName": "raw",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "imageCdnImage",
            "columnName": "imageCdnImage",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "summary",
            "columnName": "summary",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "authorMetadataId",
            "columnName": "authorMetadataId",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "wordsCount",
            "columnName": "wordsCount",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "uris",
            "columnName": "uris",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "hashtags",
            "columnName": "hashtags",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "aTag"
          ]
        }
      },
      {
        "tableName": "ArticleCommentCrossRef",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`articleId` TEXT NOT NULL, `articleAuthorId` TEXT NOT NULL, `commentNoteId` TEXT NOT NULL, PRIMARY KEY(`articleId`, `articleAuthorId`, `commentNoteId`))",
        "fields": [
          {
            "fieldPath": "articleId",
            "columnName": "articleId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "articleAuthorId",
            "columnName": "articleAuthorId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "commentNoteId",
            "columnName": "commentNoteId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "articleId",
            "articleAuthorId",
            "commentNoteId"
          ]
        }
      },
      {
        "tableName": "ArticleFeedCrossRef",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`position` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `ownerId` TEXT NOT NULL, `spec` TEXT NOT NULL, `articleATag` TEXT NOT NULL, `articleAuthorId` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ownerId",
            "columnName": "ownerId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "spec",
            "columnName": "spec",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "articleATag",
            "columnName": "articleATag",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "articleAuthorId",
            "columnName": "articleAuthorId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "position"
          ]
        },
        "indices": [
          {
            "name": "index_ArticleFeedCrossRef_ownerId_spec_articleATag_articleAuthorId",
            "unique": true,
            "columnNames": [
              "ownerId",
              "spec",
              "articleATag",
              "articleAuthorId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_ArticleFeedCrossRef_ownerId_spec_articleATag_articleAuthorId` ON `${TABLE_NAME}` (`ownerId`, `spec`, `articleATag`, `articleAuthorId`)"
          }
        ]
      },
      {
        "tableName": "HighlightData",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`highlightId` TEXT NOT NULL, `authorId` TEXT NOT NULL, `content` TEXT NOT NULL, `context` TEXT, `alt` TEXT, `referencedEventATag` TEXT, `referencedEventAuthorId` TEXT, `createdAt` INTEGER NOT NULL, PRIMARY KEY(`highlightId`))",
        "fields": [
          {
            "fieldPath": "highlightId",
            "columnName": "highlightId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "authorId",
            "columnName": "authorId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "context",
            "columnName": "context",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "alt",
            "columnName": "alt",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "referencedEventATag",
            "columnName": "referencedEventATag",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "referencedEventAuthorId",
            "columnName": "referencedEventAuthorId",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "highlightId"
          ]
        }
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'e9eeea55edad4a292f327becb09c8c7b')"
    ]
  }
}